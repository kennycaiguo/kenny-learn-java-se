<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation=" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
    
    <!-- 导入外部的properties配置文件 -->
	<context:property-placeholder location="classpath:db.properties" />

	<!-- 配置c3p0数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="jdbcUrl" value="${jdbcUrl}"></property>
		<property name="driverClass" value="${driverClass}"></property>
		<property name="user" value="${user}"></property>
		<property name="password" value="${password}"></property>
		<!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="${initialPoolSize}"></property>
		<!--连接池中保留的最小连接数。Default: 3 -->
		<property name="minPoolSize" value="3"></property>
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="${maxPoolSize}"></property>
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="3"></property>
		<!--最大空闲时间，1800秒内未使用则连接被丢弃，若为0则永不丢弃。Default: 0 -->
    	<property name="maxIdleTime" value="1800"></property>
	</bean>
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<!-- hibernate.hbm2ddl.auto参数的作用主要用于：自动创建|更新|验证数据库表结构。如果不是此方面的需求建议set value="none"。
				create：每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
				create-drop ：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
				update：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据 model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等 应用第一次运行起来后才会。
				validate ：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop><!-- 自动在MySQL中建表 -->
				<prop key="javax.persistence.validation.mode">none</prop>
				
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>  
			</props>
		</property>
		<property name="mappingLocations">
			<list>
				<value>classpath:cn/itcast/nsfw/*/entity/*.hbm.xml</value>
				<!-- <value>classpath:cn/itcast/test/entity/*.hbm.xml</value> -->
			</list>
		</property>
	</bean>
    
 	<!-- 事务管理 -->
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
 	<!-- 事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="list*" read-only="true"/>
			<tx:method name="*" rollback-for="Throwable"/>
		</tx:attributes>
	</tx:advice>
	<!-- aop配置被事务控制的类 -->
    <aop:config>
    	<!-- 扫描以Service结尾的bean -->
    	<aop:pointcut id="serviceOperation" expression="bean(*Service)"/>
  		<!-- <aop:pointcut id="serviceOperation" expression="execution(* cn.itcast..service.impl.*.*(..))"/> -->
    	<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation"/>
    </aop:config>
    
    <!-- 所有业务dao的parent -->
    <bean id="baseDao" abstract="true">
    	<property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    
    <!-- 权限鉴定类 -->
    <bean id="permissionCheck"  class="cn.itcast.core.permission.impl.PermissionCheckImpl"></bean>
    
    <!-- 引入外部sprign配置文件 -->
    <import resource="classpath:cn/itcast/*/conf/*-spring.xml"/>
    <import resource="classpath:cn/itcast/nsfw/*/conf/*-spring.xml"/>
    
</beans>
